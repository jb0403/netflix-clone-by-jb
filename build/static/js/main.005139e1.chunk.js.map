{"version":3,"sources":["axios.js","Row.js","request.js","Nav.jsx","Banner.jsx","App.jsx","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","Banner","str","n","setMovie","requests","Math","floor","random","length","fetData","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.005139e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// base url to make request to the movie database\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n// instance.get('/foo-bar');\r\n// // \"https://api.themoviedb.org/3/foo-bar\"\r\n\r\nexport default instance;","// import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"./axios\";\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    //A sinppest of code which runs based on a specific condition/variable\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            // console.log(request);\r\n            // console.log(request.data.results);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    // console.log(movies);\r\n\r\n    const opts = {\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            //https://developers.google.com/youtube/player_parameters\r\n            autoplay:1\r\n        }\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);               \r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {/* title*/}\r\n            <h2>{title} </h2>\r\n            {/* container -posters */}\r\n            <div className=\"row_posters\">\r\n            \r\n            {/* src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}  */}\r\n{/* console.log(movie); */}\r\n                {movies.map((movie) => {\r\n                    \r\n                    return <img\r\n                        key={movie.id}\r\n                        onClick={\r\n                            ()=>handleClick(movie)\r\n                        }\r\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                        \r\n                        src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.name} />\r\n                })}\r\n            </div>           \r\n            {/* {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />} */}\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;","const API_KEY = \"cf4f3ba68460190059f58006026fd601\";\r\n\r\nconst request = {\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n\r\n}\r\n\r\nexport default request;","import React, {useState, useEffect} from 'react'\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n\r\n    const [show,handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY > 100){\r\n                handleShow(true);\r\n            }else{\r\n                handleShow(false);\r\n            }\r\n        });   \r\n        return (() => {\r\n            window.removeEventListener(\"scroll\",()=>{});\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img \r\n                className=\"nav_logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n                alt=\"Netflix Logo\"\r\n            />     \r\n            <img \r\n                className=\"nav_avatar\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n                alt=\"Netflix Logo\"\r\n            />     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport request from './request';\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetData() {\r\n            const requests = await axios.get(request.fetchNetflixOriginals);\r\n            setMovie(requests.data.results[Math.floor(Math.random() * requests.data.results.length - 1)]);\r\n            // console.log(requests.data.results[Math.floor(Math.random() * requests.data.results.length - 1)]);\r\n            // Math.floor(MAth.random()*request.data.results.length-1 );\r\n        }\r\n        fetData();\r\n    }, []);\r\n    // console.log(movie);\r\n\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize:\"100% 100%\",\r\n                backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                backgroundPosition:\"center center\"\r\n            }}\r\n        > \r\n        {/*background image*/}\r\n            <div className=\"banner_contents\">\r\n                {/* title  */}\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                {/* div 2 buttons */}\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">\r\n                        Play\r\n                    </button>                \r\n                    <button className=\"banner_button\">My List</button>                \r\n                </div>\r\n                {/* description */}\r\n                <h1 className=\"banner_description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner_fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react';\nimport Row from './Row';\nimport request from \"./request\";\nimport './App.css';\nimport Nav from './Nav';\nimport Banner from './Banner';\n\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"app\">\n        {/* Navbar */}\n        <Nav />\n        {/* banner */}\n        <Banner />\n\n        <Row title=\"NETFLIX ORIGINALS\" fetchUrl={request.fetchNetflixOriginals}\n          isLargeRow={true} />\n        <Row title=\"Trending Now\" fetchUrl={request.fetchTrending}  />\n        <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated} />\n        <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies} />\n        <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies} />\n        <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies} />\n        <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies} />\n        <Row title=\"Documentries\" fetchUrl={request.fetchDocumentaries} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}